continue
Like.last.id
Like.last.ids
Like.last
@like
continue
Like.find(k.ids)
Like.find(k.id)
Like.find(k.like_id)
Like.find(k)
k = Note.last.likes.where(user_id: "1")
Note.last.likes.where(user_id: "1")
Note.last.likes.last.find(user_id: current_user.id)
Note.last.likes.last.find(user_id: 1)
Note.last.likes.last.find()
Note.last.likes.last
Note.last.likes.last.delete
Note.last.likes.last
Note.last.likes
Note.last
Like.find(7).delete
Like.find(7)
k.ids
k.id
k.delete
k.destroy
k.delete
k.remove
k
delete(k)
k.delete()
k.delete
k
k = @note.likes.where(user_id: current_user.id)
@note.likes.where(user_id: current_user.id).delete()
@note.likes.where(user_id: current_user.id).delete
@note.likes.where(user_id: current_user.id)
@note.likes
@note
continue
k
continue
k
continue
k
continue
k
continue
k
continue
n.likes.where("user_id = 1").nil?
n.likes.where("user_id = 1")
n.likes.where("user_id = current_user.id")
n.likes.where?("user_id = current_user.id")
n.likes.include?(current_user.id)
n.likes.include?(current_user)
n.likes
continue
continune
continue
current_user.likes.include?(n)continue
current_user.likes.include?(n)
current_user.likes
users.likes
n.likes
n.likes.user
n.likes.users
n.likes.user
n.likes.users
n.likes.count
n.likes.all
n.likes
n.users
n.id
n
k
n
continue
@note.likes.new(user_id: current_user.id).save
@note.likes.new(user_id: current_user.id)
@note.likes.new
@note.likes
@note
continue
@subject
continue
@subject.likes
@subject
continue
f.user_id
continue
current_user.id
current_user
f.user_id
f.name
f
continue
ProjectFile
Project_file.all
Project_file.all()
Project_file
Project_files
ProjectFiles
continue
params["format"]
params
continue
params
continue
exit
current_user.subjects.include?()
current_user.subjects
current_user
@subject.users.include?
@subject.users
@subject
continue
t
t.name
t
continue
t
continue
@new
continue
contnue
params[:teacher]
params
continue
@teacher.id
@teacher
exit
continue
teacher.name
teacher
continue
ActionCable.server.broadcast 'messaging_room_channel', content: new_message.body
ActionCable.server.broadcast 'messaging_room_channel' content: new_message.body
ActionCable.server.broadcast 'messaging_room_channel'
ActionCable.server.broadcast
ActionCable.server
new_message.body
current_user.first_name
current_user
continue
new_message.save
new_message
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
cotninue
Note.find(params[:id])
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params[:id]
project_url
params[project.id]
params
continue
params
@project
@micropost
continue
project.user_id
project
continue
f
ProjectFile.first.size
ProjectFile.first.url.size
ProjectFile.first.url
ProjectFile.first
f
f.url
f
f.url
f
continue
params
continue
@m.original_filename
@m = params["file"]
D@m = params["file"]
m = params["file"]
params["file"]
keys(params["file"])
params["file"].keys
params["file"].values
params["file"][original_filename]
params["file"][@original_filename]
params["file"].fetch(@original_filename)
params["file"]
original_filename
@original_filename
params["name"]
params[:name]
params
continue
exit
@project.notes.user
@project.notes
@project
continue
params[:project]
@new.content
@new = Note.new
params["note-description"]
params
continue
team_params(String(u.id)).values[0] == "1"
team_params(String(u.id)).values == "1"
team_params(String(u.id)).values == 1
team_params(String(u.id)).values == "[1]"
team_params(String(u.id)).values == "[1
team_params(String(u.id)).values
team_params(String(u.id))
params
continue
params["1"].values
params["1"].value
params
params["checked"]
params.values
